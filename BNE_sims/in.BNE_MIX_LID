log BNE_LID_Trial_7_4.log
### Initialization 3500 small 60 big gam 2.5 f 10 seed 10000189

# Preliminaries
units           si
atom_style      sphere
atom_modify     map array
boundary        f f f
newton          off
echo            both
communicate     single vel yes
processors      * * *

# Declare domain
region          reg block -0.070 0.070 -0.070 0.070 -0.150 1.000 units box #orig 0.7000
create_box      3 reg
neighbor        0.01 bin
neigh_modify    delay 0

### Setup

# Material and interaction properties
fix             m1 all property/global youngsModulus peratomtype 1e9 1e9 1e9
fix             m2 all property/global poissonsRatio peratomtype 0.25 0.43 0.25
fix             m3 all property/global coefficientRestitution peratomtypepair 3 0.9999 0.9999 0.98 0.9999 0.9999 0.98 0.98 0.98 0.98 # 11 12 13 21 22 23 31 32 33
fix             m4 all property/global coefficientFriction peratomtypepair 3 0.9 0.5 0.0 0.5 0.5 0.0 0.0 0.0 0.0  #11, 12, 21, 22 interaction
fix             m5 all property/global coefficientRollingFriction peratomtypepair 3 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1

# Particle insertion

fix             small all particletemplate/sphere 10000019 atom_type 1 density constant 2500 radius constant 0.002
fix             big all particletemplate/sphere 10000079 atom_type 2 density constant 250 radius constant 0.005
fix             small_dist all particledistribution/discrete 10000103 1 small 1mes
fix             big_dist all particledistribution/discrete 10000121 1 big 1

group           small type 1
group           big type 2

# Import mesh from cad:
fix             cad1 all mesh/surface file ../trashcan.stl type 3 scale 0.001 curvature 1e-5
fix             cad2 all mesh/surface file ../lidbig.stl type 3 scale 0.001 move 0 0 0.900  curvature 1e-5

# Use the imported mesh as granular wall
fix             granwalls all wall/gran model hertz tangential history rolling_friction cdt mesh n_meshes 2 meshes cad1 cad2

# Define the physics
pair_style      gran model hertz tangential history rolling_friction cdt
pair_coeff      * *

hard_particles  yes

### Detailed settings

# Integrator
fix             1 all nve/sphere

# Gravity
fix             grav all gravity 9.81 vector 0.0 0.0 -1.0

# Timestep
timestep        0.00000625

#File Output
dump        big_data big custom/vtk 6400 post_lid7_4/big_*.vtk id type type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius
dump        small_data small custom/vtk 6400 post_lid7_4/small_*.vtk id type type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius
dump		    dmpcad1 all mesh/stl 6400 post_lid7_4/can_*.stl cad1
dump		    dmpcad2 all mesh/stl 6400 post_lid7_4/lid_*.stl cad2

### Execution and further settings

# Insert particles
#Small Particles
region          insertion_small cylinder z 0.000 0.000 0.040 0.300 0.400
fix             ins_small small insert/rate/region seed 10000189 distributiontemplate small_dist verbose yes nparticles 3500 particlerate 2100 insert_every 10 start 1 overlapcheck yes vel constant 0.0 0.0 -0.001 all_in yes region insertion_small

#Big Particles
region          insertion_big cylinder z 0.000 0.000 0.035 0.100 0.200  
fix             ins_big big insert/rate/region seed 10000189 distributiontemplate big_dist verbose yes nparticles 60 particlerate 45 insert_every 10 start 10 overlapcheck yes vel constant 0.0 0.0 -0.003 all_in yes region insertion_big

run             640000 upto # 4 secs

# Apply Lid on container
fix		moveSieve all move/mesh mesh cad2 linear 0 0 -0.830125 #From height X = 1.625

run             800000 upto # 1 secs

unfix moveSieve

# Define variables which tracks center of mass dynamics of many particle system
variable        xpossmall equal xcm(small,x)
variable        xfrcsmall equal fcm(small,x)
variable        xvecsmall equal vcm(small,x)
variable        xposbig equal xcm(big,x)
variable        xfrcbig equal fcm(big,x)
variable        xvecbig equal vcm(big,x)

variable        ypossmall equal xcm(small,y)
variable        yfrcsmall equal fcm(small,y)
variable        yvecsmall equal vcm(small,y)
variable        yposbig equal xcm(big,y)
variable        yfrcbig equal fcm(big,y)
variable        yvecbig equal vcm(big,y)

variable        zpossmall equal xcm(small,z)
variable        zfrcsmall equal fcm(small,z)
variable        zvecsmall equal vcm(small,z)
variable        zposbig equal xcm(big,z)
variable        zfrcbig equal fcm(big,z)
variable        zvecbig equal vcm(big,z)

variable        countSr1 equal count(small,reg)
variable        massSr1 equal mass(small,reg)
variable        countSI1 equal count(big,reg)
variable        massSI1 equal mass(big,reg)

# Thermodynamic output settings 
thermo_style    custom step v_xpossmall v_xfrcsmall v_xvecsmall v_xposbig v_xfrcbig v_xvecbig v_ypossmall v_yfrcsmall v_yvecsmall v_yposbig v_yfrcbig v_yvecbig v_zpossmall v_zfrcsmall v_zvecsmall v_zposbig v_zfrcbig v_zvecbig v_countSr1 v_massSr1 v_countSI1 v_massSI1
thermo          16000 #show data every 0.1 sec
thermo_modify   lost ignore norm no

# Update thermodynamic output
thermo_style    custom step v_xpossmall v_xfrcsmall v_xvecsmall v_xposbig v_xfrcbig v_xvecbig v_ypossmall v_yfrcsmall v_yvecsmall v_yposbig v_yfrcbig v_yvecbig v_zpossmall v_zfrcsmall v_zvecsmall v_zposbig v_zfrcbig v_zvecbig v_countSr1 v_massSr1 v_countSI1 v_massSI1
thermo          8 #show data every 0.0000625 sec

# Oscillate mesh and lid (in phase)
fix             movecad1 all move/mesh mesh cad1 wiggle amplitude 0 0 0.00621225507207084 period 0.1 #2.5 gamma  
fix		          movecad2 all move/mesh mesh cad2 wiggle amplitude 0 0 0.00621225507207084 period 0.1 #2.5 gamma

#starts 800000
run             4000000 upto # run 20 secs

# Stop shaking
unfix           movecad1
unfix           movecad2

# Allow particles to settle
run             4320000 upto # run 2 secs
